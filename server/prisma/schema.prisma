generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int          @id @unique @default(autoincrement())
  username    String       @unique
  email       String       @unique
  password    String
  role        Role         @default(USER)
  comments    Comment[]
  information Information?
  likes       Like[]
  posts       Post[]
}

model Like {
  id        Int       @id @default(autoincrement())
  type      LikeType?
  userId    Int
  postId    Int?
  commentId Int?
  Comment   Comment?  @relation(fields: [commentId], references: [id], onDelete: Cascade)
  Post      Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  User      Users     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@unique([userId, commentId])
  @@index([userId])
}

model Post {
  id        Int       @id @unique @default(autoincrement())
  title     String    @unique
  body      String    @db.VarChar(500)
  likes     Int       @default(0)
  name      String?
  createdAt DateTime  @default(now())
  userId    Int
  comments  Comment[]
  likedBy   Like[]
  user      Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  id        Int      @id @unique @default(autoincrement())
  body      String   @db.VarChar(500)
  userId    Int
  postId    Int
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  likedBy   Like[]
}

model Information {
  id        Int       @id @unique @default(autoincrement())
  userId    Int       @unique
  firstName String?
  lastName  String?
  location  String?
  birthDate DateTime?
  education String?
  user      Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  skills    Skills[]
}

model Skills {
  id            Int         @id @unique @default(autoincrement())
  name          String
  informationId Int
  information   Information @relation(fields: [informationId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum LikeType {
  POST
  COMMENT
}
